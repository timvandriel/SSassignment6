Book Tests
TC001
Title:              test_book_str
Test Data:          book = Book("B1234", "Test Book", "Author Name", 5)  
Precondition:       None   
Test:               str(book)                                               
Expected Output:    ID: B1234, Title: Test Book, Author: Author Name, Copies: 5


Member Tests
TC002
Title:              test_borrow_book
Test Data:          member = Member("M1234", "Member Name")
                    book = Book("B1234", "Test Book", "Author Name", 5)
Precondition:       None
Test:               member.borrow_book(book)
Expected Output:    True


TC003
Title:              test_borrow_book_limit
Test Data:          member = Member("M1234", "Member Name")
                    book1 = Book("B1234", "Test Book 1", "Author Name", 5)
                    book2 = Book("B1235", "Test Book 2", "Author Name", 5)
                    book3 = Book("B1236", "Test Book 3", "Author Name", 5)
                    book4 = Book("B1237", "Test Book 4", "Author Name", 5)
Precondition:       member.borrow_book(book1)
                    member.borrow_book(book2)
                    member.borrow_book(book3)
Test:               member.borrow_book(book4)
                    book4 not in member.borrowed_books
Expected Output:    False
                    True


TC004
Title:              test_return_book_success
Test Data:          member = Member("M1234", "Member Name")
                    book = Book("B1234", "Test Book", "Author Name", 5)
Precondition:       member.borrow_book(book)
                    returned_book = member.returned_book(book.book_id)
Test:               returned_book = book
                    book not in member.borrowed_books
Expected Output:    True    
                    True


TC005
Title:              test_return_book_not_borrowed
Test Data:          member = Member("M1234", "Member Name")
                    book = Book("B1234", "Test Book", "Author Name", 5)
Precondition:       returned_book = member.return_book(book.book_id)
Test:               returned_book is None
Expected Output:    True


TC006
Title:              test_member_str
Test Data:          member = Member("M1234", "Member Name")
Precondition:       None
Test:               str(member) = "ID: M1234, Name: Member Name, Borrowed Books: None"
Expected Output:    True


Library Tests
TC007
Title:              test_add_book
Precondition:       self.library.add_book(title="New Book", author="Author X", copies=5)
                    added_book = self.library.books[0]                   
Tests:              len(self.libray.books) =1
                    added_book.title = "New Book"
                    added_book.author = "Author X"
                    added_book.copies = 5
                    added_book.book_id.startswith("B")
                    1000 <= int(added_book.book_id[1:]) <= 9999
                    f"Book added: {added_book}" = captured_output.getvalue()
Expected Output:              All True


TC008
Title:              test_add_member
Precondition:       add_member(name="Jane Doe")
                    added_member = self.library.members[0]
Tests:              len(self.library.members) = 1
                    added_member.name = "Jane Doe"
                    addedd_member.member_id.startswith("M")
                    1000 <= int(added_member.member_id[1:]) <= 9999
                    output = f"Member added: {added_member}"
Expected Output:    All True

TC009
Title:              test_successsful_borrow
Test Data:          add_book("Test Book", "Author Name" 5)
                    add_member("Member Name")
Tests:              library.borrow_book(member_id, book_id)
                    Library.books[0].books.copies
                    library,members[0].borrowed_books
                    member_id, book_id, "borrow"             
Expected Output:    "Book borrowed: Test Book by Member Name"
                    4
                    1
                    library
